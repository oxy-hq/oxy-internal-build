name: Internal Nightly Build

on:
  schedule:
    - cron: "0 8 * * *" # Runs every day at midnight Bay Area time (UTC-8)
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to checkout from oxy-hq/oxy-internal'
        required: false
        default: 'main'

env:
  CARGO_TERM_COLOR: always
  MACOSX_DEPLOYMENT_TARGET: "11.0"

defaults:
  run:
    shell: bash

permissions:
  contents: write
  actions: read

jobs:
  build-internal:
    name: Build internal CLI for ${{ matrix.job.target }}
    concurrency:
      group: oxy-intenral-nightly-build-${{ github.ref_name  }}-${{ matrix.job.os }}-${{ matrix.job.target }}
      cancel-in-progress: true
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-22.04-arm
            target: aarch64-unknown-linux-gnu
    steps:
      - uses: actions/create-github-app-token@v2
        name: Create GitHub App Token
        id: app-token
        with:
          app-id: ${{ vars.ARGO_APP_ID }}
          private-key: ${{ secrets.ARGO_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: |
            oxy-internal
            oxy-internal-build

      - uses: actions/checkout@v4
        id: checkout
        with:
          fetch-depth: 0
          repository: oxy-hq/oxy-internal
          token: ${{ steps.app-token.outputs.token }}
          ref: ${{ github.event.inputs.branch || 'main' }}

      - name: Create artifacts folder
        run: mkdir -p artifacts

      - uses: rui314/setup-mold@v1
        if: runner.os == 'Linux'
        with:
          make-default: true
      - name: Prep Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.job.target }}
      - name: Prep cargo cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: build-cli
          cache-all-crates: "true"

      # protobuf is required by lance https://github.com/lancedb/lance/issues/3073
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ steps.app-token.outputs.token }}

      #-- Prep node
      - name: Prep Node
        uses: actions/setup-node@v4
        id: setup-node
        with:
          node-version: lts/*

      - uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: pnpm-store-${{ matrix.job.os }}-${{ matrix.job.target }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ matrix.job.os }}-${{ matrix.job.target }}
      - name: Install dependencies & Build web-app
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
          SENTRY_AUTH_TOKEN: ${{ vars.SENTRY_AUTH_TOKEN }}
          VITE_SENTRY_DSN: ${{ vars.VITE_SENTRY_DSN }}
        run: |
          pnpm install --prefer-frozen-lockfile
          pnpm -C web-app build

      - name: Build oxy cli
        shell: bash
        env:
          SENTRY_DSN: ${{ vars.SENTRY_DSN }}
        run: |
          cargo build --release --target ${{ matrix.job.target }}
          mv target/${{ matrix.job.target }}/release/oxy artifacts/oxy-${{ matrix.job.target }}

      - name: Generate config schema (once)
        if: ${{ matrix.job.target == 'aarch64-apple-darwin' }}
        run: |
          cargo run --release --target ${{ matrix.job.target }} -- gen-config-schema
          cp -a json-schemas/. artifacts/
          cp Cargo.lock artifacts/

      - name: Get current date
        id: date
        run: echo "current_date=$(date -u +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Publish release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ steps.app-token.outputs.token }}
          draft: false
          prerelease: false
          make_latest: true
          tag_name: rolling_${{ steps.date.outputs.current_date }}_${{ github.event.inputs.branch || 'main' }}
          name: Rolling Internal Build ${{ steps.date.outputs.current_date }} (${{ github.event.inputs.branch || 'main' }})
          files: artifacts/**/*
          body: |
            Rolling internal build triggered at ${{ steps.date.outputs.current_date }}. Please use with caution.
            Commit: [${{ steps.checkout.outputs.commit }}](https://github.com/oxy-hq/oxy-internal/commit/${{ steps.checkout.outputs.commit }})
